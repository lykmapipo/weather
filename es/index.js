import { mergeObjects, isNotValue, compact, parseDate } from '@lykmapipo/common';
import { get as get$1, all } from '@lykmapipo/http-client';
import { map, toNumber, trim, find, values, get } from 'lodash';
import moment from 'moment';

const KNOWN_CITIES = [
	"1183:Herat",
	"219:Kabul",
	"242:Algiers",
	"1434:Annaba",
	"1435:Bechar",
	"1436:Biskra",
	"1359:Constantine",
	"1437:Djanet",
	"1438:Djelfa",
	"1360:Ghardaia",
	"1361:Oran",
	"1439:Setif",
	"1362:Tamanrasset",
	"1440:Tlemcen",
	"261:Luanda",
	"151:St. John's Antigua",
	"858:Bariloche",
	"294:Buenos Aires",
	"855:Cordoba",
	"2205:El Calafate",
	"857:Iguazu",
	"2206:Mar del Plata",
	"856:Mendoza",
	"2207:Salta",
	"2208:Trelew",
	"859:Ushuaia",
	"2079:Dilijan",
	"2080:Jermuk",
	"69:Kapan",
	"68:Sevan",
	"67:Vanadzor",
	"66:Yerevan",
	"315:Adelaide",
	"1801:Adventure Bay",
	"356:Albany",
	"1649:Albion Park",
	"1802:Albury",
	"317:Albury / Wodonga",
	"323:Alice Springs",
	"357:Alyangula",
	"1650:Ararat",
	"1256:Argyle",
	"358:Armidale",
	"359:Augusta",
	"1651:Avalon",
	"360:Ayr / Home Hill",
	"361:Bairnsdale",
	"362:Ballarat",
	"1652:Ballina",
	"363:Batemans Bay",
	"364:Bathurst",
	"1653:Beechworth",
	"365:Bega",
	"1654:Bellerive",
	"1803:Ben Lomond",
	"1655:Benalla",
	"366:Bendigo",
	"1804:Bicheno",
	"1656:Bondi",
	"368:Borroloola",
	"1657:Bothwell",
	"369:Bourke",
	"370:Bowen",
	"371:Bowral",
	"372:Bridgetown",
	"1658:Bridport",
	"320:Brisbane",
	"2068:Brisbane Airport",
	"1192:Brisbane Bayside",
	"373:Broken Hill",
	"374:Broome",
	"375:Bunbury",
	"376:Bundaberg",
	"377:Busselton",
	"1159:Cabramurra",
	"299:Cairns",
	"1660:Campbell Town [NSW]",
	"1659:Campbell Town [TAS]",
	"302:Canberra",
	"1805:Canterbury",
	"378:Cape Byron",
	"1661:Cape Otway",
	"379:Carnarvon",
	"1662:Casterton",
	"1663:Castlemaine",
	"380:Ceduna",
	"1664:Cerberus",
	"1806:Cessnock",
	"381:Charleville",
	"382:Charters Towers",
	"681:Christmas Island",
	"383:Clare",
	"384:Clermont",
	"385:Cobar",
	"683:Cocos Island",
	"386:Coffs Harbour",
	"387:Colac",
	"1807:Coles Bay",
	"388:Collie",
	"1665:Combienbar",
	"389:Coober Pedy",
	"390:Cooma",
	"391:Coonawarra",
	"1666:Corryong",
	"1667:Cradle Valley",
	"1668:Cranbourne",
	"1669:Cressy",
	"1670:Currie",
	"1808:Cygnet",
	"392:Dalby",
	"684:Dalwallinu",
	"1671:Dartmouth",
	"322:Darwin",
	"1086:Darwin Rural",
	"1672:Deloraine",
	"1218:Denham",
	"393:Deniliquin",
	"367:Derby",
	"394:Devonport",
	"1809:Dover",
	"395:Dubbo",
	"396:Echuca",
	"397:Elizabeth",
	"398:Emerald",
	"399:Esperance",
	"400:Eucla",
	"1810:Evandale",
	"401:Exmouth",
	"1673:Falls Creek",
	"1811:Fingal",
	"1214:Fitzroy Crossing",
	"1320:Forster",
	"1812:Frankston",
	"1674:Gabo Island",
	"402:Geelong",
	"1813:Geeveston",
	"1675:George Town",
	"403:Geraldton",
	"404:Gladstone",
	"1319:Glen Innes",
	"1676:Glenelg",
	"1677:Glenorchy",
	"405:Gold Coast",
	"406:Goondiwindi",
	"407:Gosford",
	"408:Goulburn",
	"409:Grafton",
	"410:Griffith",
	"411:Gympie",
	"412:Halls Creek",
	"413:Hamilton",
	"1678:Hay",
	"414:Hervey Bay",
	"1679:Heywood",
	"316:Hobart",
	"415:Horsham",
	"1680:Huonville",
	"416:Ingham",
	"417:Innisfail",
	"418:Inverell",
	"419:Ipswich",
	"1318:Ivanhoe",
	"420:Jabiru",
	"1681:Jindabyne",
	"421:Kalbarri",
	"422:Kalgoorlie",
	"1215:Kalumburu",
	"423:Karratha",
	"424:Katanning",
	"425:Katherine",
	"426:Katoomba",
	"427:Keith",
	"428:Kempsey",
	"1682:Kerang",
	"1683:Kilmore Gap",
	"429:Kingaroy",
	"430:Kingscote",
	"1684:Kingston",
	"431:Kununurra",
	"515:Kurnell",
	"1685:Kyabram",
	"432:Kyancutta",
	"1686:Lajamanu",
	"1687:Lake Eildon",
	"433:Lake Grace",
	"1688:Lake St Clair",
	"1689:Lakes Entrance",
	"1814:Latrobe",
	"434:Latrobe Valley",
	"435:Launceston",
	"1257:Laverton [VIC]",
	"436:Laverton [WA]",
	"437:Leigh Creek",
	"438:Leinster",
	"1259:Leonora",
	"1815:Liawenee",
	"439:Lismore",
	"687:Lithgow",
	"440:Liverpool",
	"1690:Longerenong",
	"441:Longreach",
	"442:Lord Howe Island",
	"443:Mackay",
	"445:Maitland",
	"444:Maitland and Cessnock",
	"1691:Mallacoota",
	"446:Mandurah",
	"1692:Maningrida",
	"447:Manjimup",
	"1251:Marble Bar",
	"448:Mareeba",
	"449:Margaret River",
	"1816:Marrawah",
	"450:Maryborough",
	"1694:Maryborough [VIC]",
	"1817:Maydena",
	"451:Meekatharra",
	"1695:Melaleuca",
	"301:Melbourne",
	"1317:Merimbula",
	"452:Merredin",
	"453:Mildura",
	"454:Moora",
	"1696:Moorabbin",
	"455:Moranbah",
	"456:Morawa",
	"457:Moree",
	"1697:Mornington",
	"458:Mornington Peninsula",
	"1698:Mortlake",
	"1699:Mount Barker",
	"1700:Mount Baw Baw",
	"1701:Mount Buller",
	"1702:Mount Dandenong",
	"1818:Mount Field",
	"1703:Mount Gambier",
	"1704:Mount Hotham",
	"1705:Mount Isa",
	"1706:Mount Moornapa",
	"1707:Mount Nowa Nowa",
	"1708:Mount Wellington",
	"1709:Mowbray",
	"464:Mudgee",
	"465:Murray Bridge",
	"466:Naracoorte",
	"1316:Narrabri",
	"467:Narrogin",
	"1710:New Norfolk",
	"319:Newcastle",
	"468:Newman",
	"1711:Nhill",
	"469:Nhulunbuy",
	"470:Noarlunga",
	"471:Norfolk Island",
	"1712:Normanton",
	"1252:Norseman",
	"472:Northam",
	"473:Nowra",
	"474:Nuriootpa",
	"1713:Oatlands",
	"1216:Onslow",
	"475:Orange",
	"476:Orbost",
	"1714:Orford",
	"1819:Ouse",
	"1715:Ouyen",
	"477:Paraburdoo",
	"478:Parkes",
	"1313:Parramatta",
	"1820:Penguin",
	"1160:Penrith",
	"1161:Perisher Valley",
	"314:Perth",
	"1716:Phillip Island",
	"1717:Pirlangimpi",
	"1718:Point Hicks",
	"1719:Port Arthur",
	"479:Port Augusta",
	"480:Port Hedland",
	"481:Port Lincoln",
	"482:Port Macquarie",
	"483:Port Pirie",
	"1720:Portland",
	"1721:Prospect",
	"1722:Queenstown",
	"484:Ravensthorpe",
	"1723:Redesdale",
	"485:Renmark",
	"1724:Rhyll",
	"1725:Richmond [NSW]",
	"1726:Richmond [TAS]",
	"1253:Robe",
	"487:Rockhampton",
	"1210:Roebourne",
	"488:Roma",
	"1727:Rosebery",
	"1728:Ross",
	"489:Roxby Downs",
	"1729:Rutherglen",
	"490:Sale",
	"491:Scone",
	"1193:Scoresby",
	"1730:Scottsdale",
	"492:Seymour",
	"1821:Sheffield",
	"1731:Sheoaks",
	"493:Shepparton",
	"1322:Singleton",
	"1732:Smithton",
	"1822:Sorell",
	"1315:Springwood",
	"494:St Helens",
	"1823:St Marys",
	"495:Strahan Town",
	"1733:Strathbogie",
	"1824:Strathgordon",
	"496:Sunshine Coast",
	"498:Swan Hill",
	"497:Swansea",
	"300:Sydney",
	"499:Tamworth",
	"500:Taree",
	"1734:Tarraleah",
	"1735:Tatura",
	"501:Tennant Creek",
	"1314:Terrey Hills",
	"1825:The Corner",
	"1736:The Entrance",
	"1162:Thredbo",
	"1737:Thursday Island",
	"1738:Tibooburra",
	"1260:Tom Price",
	"502:Toowoomba",
	"1739:Toronto",
	"321:Townsville",
	"1312:Tuggeranong",
	"517:Tullamarine",
	"1826:Tunnack",
	"1740:Tweed Heads",
	"1741:Ulverstone",
	"503:Victor Harbor",
	"1742:Wadeye",
	"504:Wagga Wagga",
	"1743:Wallsend",
	"1744:Walpeup",
	"505:Wangaratta",
	"1827:Waratah",
	"1745:Warracknabeal",
	"506:Warrnambool",
	"507:Warwick",
	"516:Watsonia",
	"1746:Weeaproinah",
	"1747:Whitemark",
	"508:Whyalla",
	"1748:Wilsons Promontory",
	"509:Winton",
	"318:Wollongong",
	"510:Wonthaggi",
	"511:Woomera",
	"1217:Wudinna",
	"1212:Wyndham",
	"1749:Wynyard",
	"512:Yarra Glen",
	"1750:Yarrawonga",
	"1751:Yass",
	"513:Yeppoon",
	"1321:Young",
	"1752:Yuendumu",
	"514:Yulara",
	"1828:Zeehan",
	"905:Innsbruck",
	"904:Klagenfurt",
	"17:Vienna",
	"18:Baku",
	"19:Ganja",
	"20:Lenkaran",
	"1633:Freeport",
	"1634:Inagua",
	"97:Nassau",
	"220:Bahrain/Manama",
	"1168:Barishal",
	"1164:Chittagong",
	"1163:Dhaka",
	"1167:Khulna",
	"1166:Rajshahi",
	"1165:Sylhet",
	"205:Minsk",
	"2291:Aalst",
	"2292:Aalter",
	"2293:Aarschot",
	"2294:Aartselaar",
	"2295:Affligem",
	"2296:Aiseau-Presles",
	"2297:Alken",
	"2298:Alveringem",
	"2299:Amay",
	"2300:Amel",
	"2301:Andenne",
	"2302:Anderlecht",
	"2303:Anderlues",
	"2304:Anhee",
	"2305:Ans",
	"2306:Anthisnes",
	"2307:Antoing",
	"2308:Antwerp",
	"2309:Anzegem",
	"2310:Ardooie",
	"2311:Arendonk",
	"2312:Arlon",
	"2313:As",
	"2314:Asse",
	"2315:Assenede",
	"2316:Assesse",
	"2317:Ath",
	"2318:Attert",
	"2319:Aubange",
	"2320:Aubel",
	"2321:Avelgem",
	"2322:Awans",
	"2323:Aywaille",
	"2324:Baarle-Hertog",
	"2325:Baelen",
	"2326:Balen",
	"2327:Bassenge",
	"2328:Bastogne",
	"2329:Beaumont",
	"2330:Beauraing",
	"2331:Beauvechain",
	"2332:Beernem",
	"2333:Beerse",
	"2334:Beersel",
	"2335:Begijnendijk",
	"2336:Bekkevoort",
	"2337:Beloeil",
	"2338:Beringen",
	"2339:Berlaar",
	"2340:Berlare",
	"2341:Berloz",
	"2342:Bernissart",
	"2343:Bertem",
	"2344:Bertogne",
	"2345:Bertrix",
	"2346:Bever",
	"2347:Beveren",
	"2348:Beyne-Heusay",
	"2349:Bierbeek",
	"2350:Bievre",
	"2351:Bilzen",
	"2352:Binche",
	"2353:Blankenberge",
	"2354:Blegny",
	"2355:Bocholt",
	"2356:Boechout",
	"2357:Bonheiden",
	"2358:Boom",
	"2359:Boortmeerbeek",
	"2360:Borgloon",
	"2361:Bornem",
	"2362:Borsbeek",
	"2363:Bouillon",
	"2364:Boussu",
	"2365:Boutersem",
	"2366:Braine-L'Alleud",
	"2367:Braine-Le-Chateau",
	"2368:Braine-Le-Comte",
	"2369:Braives",
	"2370:Brakel",
	"2371:Brasschaat",
	"2372:Brecht",
	"2373:Bredene",
	"2374:Bree",
	"2375:Brugelette",
	"2376:Brugge",
	"2377:Brunehaut",
	"191:Brussels",
	"2378:Buggenhout",
	"2379:Bullingen",
	"2380:Burdinne",
	"2381:Burg-Reuland",
	"2382:Butgenbach",
	"2383:Celles",
	"2384:Cerfontaine",
	"2385:Chapelle-Lez-Herlaimont",
	"2386:Charleroi",
	"2387:Chastre",
	"2388:Chatelet",
	"2389:Chaudfontaine",
	"2390:Chaumont-Gistoux",
	"2391:Chievres",
	"2392:Chimay",
	"2393:Chiny",
	"2394:Ciney",
	"2395:Clavier",
	"2396:Colfontaine",
	"2397:Comblain-Au-Pont",
	"2398:Comines-Warneton",
	"2399:Courcelles",
	"2400:Court-Saint-Etienne",
	"2401:Couvin",
	"2402:Crisnee",
	"2403:Dalhem",
	"2404:Damme",
	"2405:Daverdisse",
	"2406:De Haan",
	"2407:De Panne",
	"2408:De Pinte",
	"2409:Deerlijk",
	"2410:Deinze",
	"2411:Denderleeuw",
	"2412:Dendermonde",
	"2413:Dentergem",
	"2414:Dessel",
	"2415:Destelbergen",
	"2416:Diepenbeek",
	"2417:Diest",
	"2418:Diksmuide",
	"2419:Dilbeek",
	"2420:Dilsen-Stokkem",
	"2421:Dinant",
	"2422:Dison",
	"2423:Doische",
	"2424:Donceel",
	"2425:Dour",
	"2426:Drogenbos",
	"2427:Duffel",
	"2428:Durbuy",
	"2429:Ecaussinnes",
	"2430:Edegem",
	"2431:Eeklo",
	"2432:Eghezee",
	"2433:Ellezelles",
	"2434:Enghien",
	"2435:Engis",
	"2436:Erezee",
	"2437:Erpe-Mere",
	"2438:Erquelinnes",
	"2439:Esneux",
	"2440:Essen",
	"2441:Estaimpuis",
	"2442:Estinnes",
	"2443:Etalle",
	"2444:Etterbeek",
	"2445:Eupen",
	"2446:Evere",
	"2447:Evergem",
	"2448:Faimes",
	"2449:Farciennes",
	"2450:Fauvillers",
	"2451:Fernelmont",
	"2452:Ferrieres",
	"2453:Fexhe-Le-Haut-Clocher",
	"2454:Flemalle",
	"2455:Fleron",
	"2456:Fleurus",
	"2457:Flobecq",
	"2458:Floreffe",
	"2459:Florennes",
	"2460:Florenville",
	"2461:Fontaine-L'Eveque",
	"2462:Forest",
	"2463:Fosses-La-Ville",
	"2464:Frameries",
	"2465:Frasnes-Lez-Anvaing",
	"2466:Froidchapelle",
	"2467:Galmaarden",
	"2468:Ganshoren",
	"2469:Gavere",
	"2470:Gedinne",
	"2471:Geel",
	"2472:Geer",
	"2473:Geetbets",
	"2474:Gembloux",
	"2475:Genappe",
	"2476:Genk",
	"2477:Geraardsbergen",
	"2478:Gerpinnes",
	"2479:Gesves",
	"2480:Ghent",
	"2481:Gingelom",
	"2482:Gistel",
	"2483:Glabbeek",
	"2484:Gooik",
	"2485:Gouvy",
	"2486:Grace-Hollogne",
	"2487:Grez-Doiceau",
	"2488:Grimbergen",
	"2489:Grobbendonk",
	"2490:Haacht",
	"2491:Haaltert",
	"2492:Habay",
	"2493:Halen",
	"2494:Halle",
	"2495:Ham",
	"2496:Ham-Sur-Heure-Nalinnes",
	"2497:Hamme",
	"2498:Hamoir",
	"2499:Hamois",
	"2500:Hamont-Achel",
	"2501:Hannut",
	"2502:Harelbeke",
	"2503:Hasselt",
	"2504:Hastiere",
	"2505:Havelange",
	"2506:Hechtel-Eksel",
	"2507:Heers",
	"2508:Heist-Op-Den-Berg",
	"2509:Helecine",
	"2510:Hemiksem",
	"2511:Hensies",
	"2512:Herbeumont",
	"2513:Herent",
	"2514:Herentals",
	"2515:Herenthout",
	"2516:Herk-De-Stad",
	"2517:Herne",
	"2518:Heron",
	"2519:Herselt",
	"2520:Herstal",
	"2521:Herstappe",
	"2522:Herve",
	"2523:Herzele",
	"2524:Heusden-Zolder",
	"2525:Heuvelland",
	"2526:Hoegaarden",
	"2527:Hoeilaart",
	"2528:Hoeselt",
	"2529:Holsbeek",
	"2530:Honnelles",
	"2531:Hooglede",
	"2532:Hoogstraten",
	"2533:Horebeke",
	"2534:Hotton",
	"2535:Houffalize",
	"2536:Houthalen-Helchteren",
	"2537:Houthulst",
	"2538:Houyet",
	"2539:Hove",
	"2540:Huldenberg",
	"2541:Hulshout",
	"2542:Huy",
	"2543:Ichtegem",
	"2544:Ieper",
	"2545:Incourt",
	"2546:Ingelmunster",
	"2547:Ittre",
	"2548:Ixelles",
	"2549:Izegem",
	"2550:Jabbeke",
	"2551:Jalhay",
	"2552:Jemeppe-Sur-Sambre",
	"2553:Jette",
	"2554:Jodoigne",
	"2555:Juprelle",
	"2556:Jurbise",
	"2557:Kalmthout",
	"2558:Kampenhout",
	"2559:Kapelle-Op-Den-Bos",
	"2560:Kapellen",
	"2561:Kaprijke",
	"2562:Kasterlee",
	"2563:Keerbergen",
	"2564:Kelmis",
	"2565:Kinrooi",
	"945:Kleine Brogel",
	"2566:Kluisbergen",
	"2567:Knesselare",
	"2568:Knokke-Heist",
	"2569:Koekelare",
	"2570:Koekelberg",
	"2571:Koksijde",
	"2572:Kontich",
	"2573:Kortemark",
	"2574:Kortenaken",
	"2575:Kortenberg",
	"2576:Kortessem",
	"2577:Kortrijk",
	"2578:Kraainem",
	"2579:Kruibeke",
	"2580:Kruishoutem",
	"2581:Kuurne",
	"2582:La Bruyere",
	"2583:La Hulpe",
	"2584:La Louviere",
	"2585:La Roche-En-Ardenne",
	"2586:Laakdal",
	"2587:Laarne",
	"2588:Lanaken",
	"2589:Landen",
	"2590:Langemark-Poelkapelle",
	"2591:Lasne",
	"2592:Le Roeulx",
	"2593:Lebbeke",
	"2594:Lede",
	"2595:Ledegem",
	"2596:Leglise",
	"2597:Lendelede",
	"2598:Lennik",
	"2599:Lens",
	"2600:Leopoldsburg",
	"2601:Les Bons Villers",
	"2602:Lessines",
	"2603:Leuven",
	"2604:Leuze-En-Hainaut",
	"2605:Libin",
	"2606:Libramont-Chevigny",
	"2607:Lichtervelde",
	"2608:Liedekerke",
	"2609:Liege",
	"2610:Lier",
	"2611:Lierde",
	"2612:Lierneux",
	"2613:Lille",
	"2614:Limbourg",
	"2615:Lincent",
	"2616:Linkebeek",
	"2617:Lint",
	"2618:Linter",
	"2619:Lo-Reninge",
	"2620:Lobbes",
	"2621:Lochristi",
	"2622:Lokeren",
	"2623:Lommel",
	"2624:Londerzeel",
	"2625:Lontzen",
	"2626:Lovendegem",
	"2627:Lubbeek",
	"2628:Lummen",
	"2629:Maarkedal",
	"2630:Maaseik",
	"2631:Maasmechelen",
	"2632:Machelen",
	"2633:Maldegem",
	"2634:Malle",
	"2635:Malmedy",
	"2636:Manage",
	"2637:Manhay",
	"2638:Marche-En-Famenne",
	"2639:Marchin",
	"2640:Martelange",
	"2641:Mechelen",
	"2642:Meerhout",
	"2643:Meeuwen-Gruitrode",
	"2644:Meise",
	"2645:Meix-Devant-Virton",
	"2646:Melle",
	"2647:Menen",
	"2648:Merbes-Le-Chateau",
	"2649:Merchtem",
	"2650:Merelbeke",
	"2651:Merksplas",
	"2652:Mesen",
	"2653:Messancy",
	"2654:Mettet",
	"2655:Meulebeke",
	"2656:Middelkerke",
	"2657:Modave",
	"2658:Moerbeke",
	"2659:Mol",
	"2660:Momignies",
	"2661:Mons",
	"2662:Mont-De-L'Enclus",
	"2663:Mont-Saint-Guibert",
	"2664:Montigny-Le-Tilleul",
	"2665:Moorslede",
	"2666:Morlanwelz",
	"2667:Mortsel",
	"2668:Mouscron",
	"2669:Musson",
	"2670:Namur",
	"2671:Nandrin",
	"2672:Nassogne",
	"2673:Nazareth",
	"2674:Neerpelt",
	"2675:Neufchateau",
	"2676:Neupre",
	"2677:Nevele",
	"2678:Niel",
	"2679:Nieuwerkerken",
	"2680:Nieuwpoort",
	"2681:Nijlen",
	"2682:Ninove",
	"2683:Nivelles",
	"2684:Ohey",
	"2685:Olen",
	"2686:Olne",
	"2687:Onhaye",
	"2688:Oosterzele",
	"2689:Oostkamp",
	"2690:Oostrozebeke",
	"2691:Opglabbeek",
	"2692:Opwijk",
	"2693:Oreye",
	"2694:Orp-Jauche",
	"944:Ostend",
	"2695:Ottignies-Louvain-La-Neuve",
	"2696:Oud-Heverlee",
	"2697:Oud-Turnhout",
	"2698:Oudenaarde",
	"2699:Oudenburg",
	"2700:Oudergem",
	"2701:Ouffet",
	"2702:Oupeye",
	"2703:Overijse",
	"2704:Overpelt",
	"2705:Paliseul",
	"2706:Pecq",
	"2707:Peer",
	"2708:Pepingen",
	"2709:Pepinster",
	"2710:Peruwelz",
	"2711:Perwez",
	"2712:Philippeville",
	"2713:Pittem",
	"2714:Plombieres",
	"2715:Pont-A-Celles",
	"2716:Poperinge",
	"2717:Profondeville",
	"2718:Putte",
	"2719:Puurs",
	"2720:Quaregnon",
	"2721:Quevy",
	"2722:Quievrain",
	"2723:Raeren",
	"2724:Ramillies",
	"2725:Ranst",
	"2726:Ravels",
	"2727:Rebecq",
	"2728:Remicourt",
	"2729:Rendeux",
	"2730:Retie",
	"2731:Riemst",
	"2732:Rijkevorsel",
	"2733:Rixensart",
	"2734:Rochefort",
	"2735:Roeselare",
	"2736:Ronse",
	"2737:Roosdaal",
	"2738:Rotselaar",
	"2739:Rouvroy",
	"2740:Ruiselede",
	"2741:Rumes",
	"2742:Rumst",
	"2743:Saint-Georges-Sur-Meuse",
	"2744:Saint-Ghislain",
	"2745:Saint-Josse-Ten-Noode",
	"2746:Saint-Leger",
	"2747:Saint-Nicolas",
	"2748:Sainte-Ode",
	"2749:Sambreville",
	"2750:Sankt Vith",
	"2751:Schaerbeek",
	"2752:Schelle",
	"2753:Scherpenheuvel-Zichem",
	"2754:Schilde",
	"2755:Schoten",
	"2756:Seneffe",
	"2757:Seraing",
	"2758:Silly",
	"2759:Sint-Agatha-Berchem",
	"2760:Sint-Amands",
	"2761:Sint-Genesius-Rode",
	"2762:Sint-Gillis",
	"2763:Sint-Gillis-Waas",
	"2764:Sint-Jans-Molenbeek",
	"2765:Sint-Katelijne-Waver",
	"2766:Sint-Lambrechts-Woluwe",
	"2767:Sint-Laureins",
	"2768:Sint-Lievens-Houtem",
	"2769:Sint-Martens-Latem",
	"2770:Sint-Niklaas",
	"2771:Sint-Pieters-Leeuw",
	"2772:Sint-Pieters-Woluwe",
	"2773:Sint-Truiden",
	"2774:Sivry-Rance",
	"2775:Soignies",
	"2776:Sombreffe",
	"2777:Somme-Leuze",
	"2778:Soumagne",
	"2779:Spa",
	"2780:Spiere-Helkijn",
	"2781:Sprimont",
	"946:St. Hubert",
	"2782:Stabroek",
	"2783:Staden",
	"2784:Stavelot",
	"2785:Steenokkerzeel",
	"2786:Stekene",
	"2787:Stoumont",
	"2788:Tellin",
	"2789:Temse",
	"2790:Tenneville",
	"2791:Ternat",
	"2792:Tervuren",
	"2793:Tessenderlo",
	"2794:Theux",
	"2795:Thimister-Clermont",
	"2796:Thuin",
	"2797:Tielt",
	"2798:Tielt-Winge",
	"2799:Tienen",
	"2800:Tinlot",
	"2801:Tintigny",
	"2802:Tongeren",
	"2803:Torhout",
	"2804:Tournai",
	"2805:Tremelo",
	"2806:Trois-Ponts",
	"2807:Trooz",
	"2808:Tubize",
	"2809:Turnhout",
	"2810:Uccle",
	"2811:Vaux-Sur-Sure",
	"2812:Verlaine",
	"2813:Verviers",
	"2814:Veurne",
	"2815:Vielsalm",
	"2816:Villers-La-Ville",
	"2817:Villers-Le-Bouillet",
	"2818:Vilvoorde",
	"2819:Viroinval",
	"947:Virton",
	"2820:Vise",
	"2821:Vleteren",
	"2822:Voeren",
	"2823:Vorselaar",
	"2824:Vosselaar",
	"2825:Vresse-Sur-Semois",
	"2826:Waarschoot",
	"2827:Waasmunster",
	"2828:Wachtebeke",
	"2829:Waimes",
	"2830:Walcourt",
	"2831:Walhain",
	"2832:Wanze",
	"2833:Waregem",
	"2834:Waremme",
	"2835:Wasseiges",
	"2836:Waterloo",
	"2837:Watermael-Boitsfort",
	"2838:Wavre",
	"2839:Welkenraedt",
	"2840:Wellen",
	"2841:Wellin",
	"2842:Wemmel",
	"2843:Wervik",
	"2844:Westerlo",
	"2845:Wetteren",
	"2846:Wevelgem",
	"2847:Wezembeek-Oppem",
	"2848:Wichelen",
	"2849:Wielsbeke",
	"2850:Wijnegem",
	"2851:Willebroek",
	"2852:Wingene",
	"2853:Wommelgem",
	"2854:Wortegem-Petegem",
	"2855:Wuustwezel",
	"2856:Yvoir",
	"2857:Zandhoven",
	"2858:Zaventem",
	"2859:Zedelgem",
	"2860:Zele",
	"2861:Zelzate",
	"2862:Zemst",
	"2863:Zingem",
	"2864:Zoersel",
	"2865:Zomergem",
	"2866:Zonhoven",
	"2867:Zonnebeke",
	"2868:Zottegem",
	"2869:Zoutleeuw",
	"2870:Zuienkerke",
	"2871:Zulte",
	"2872:Zutendaal",
	"2873:Zwalm",
	"2874:Zwevegem",
	"2875:Zwijndrecht",
	"148:Belize City",
	"1087:Belmopan City",
	"2209:Bohicon",
	"259:Cotonou",
	"2210:Kandi",
	"2211:Kerou",
	"2212:Natitingou",
	"2213:Ouidah",
	"2214:Parakou",
	"2215:Porga",
	"2216:Porto-Novo",
	"2217:Save",
	"2954:Bhur",
	"1275:Bumthang",
	"1276:Mongar",
	"1273:Paro",
	"2955:Samtse",
	"2956:Thimphu",
	"2957:Trashigang",
	"1274:Wangdi Phodrang",
	"16:Banja Luka",
	"14:Mostar",
	"13:Sarajevo",
	"15:Tuzla",
	"1543:Francistown",
	"1542:Gaborone",
	"1546:Ghanzi",
	"1545:Kasane",
	"1544:Maun",
	"1547:Sir Seretse Khama Airport",
	"1060:Aracaju",
	"1061:Belem",
	"1062:Belo Horizonte",
	"1063:Boa Vista",
	"290:Brasilia",
	"1064:Campo Grande",
	"1065:Cuiaba",
	"1066:Curitiba",
	"1067:Florianopolis",
	"1068:Fortaleza",
	"1069:Goiania",
	"1070:Joao Pessoa",
	"1071:Macapa",
	"1072:Maceio",
	"1073:Manaus",
	"1074:Natal",
	"1075:Palmas",
	"1076:Porto Alegre",
	"1077:Porto Velho",
	"1078:Recife",
	"1079:Rio Branco",
	"1080:Rio De Janeiro",
	"1081:Salvador",
	"1082:Sao Luis",
	"1083:Sao Paulo",
	"1084:Teresina",
	"1085:Vitoria",
	"96:Cayman Islands",
	"95:Bandar Seri Begawan",
	"1422:Plovdiv",
	"303:Sofia",
	"919:Varna",
	"1526:Bobo Dioulasso",
	"1527:Boromo",
	"1528:Dedougou",
	"1529:Dori",
	"1530:Fada Ngourma",
	"1531:Gaoua",
	"1532:Ouagadougou Aero",
	"1533:Ouahigouya",
	"1534:Po",
	"1519:Bujumbura",
	"1521:Gitega",
	"1523:Musasa",
	"1522:Muyinga",
	"1520:Ngozi",
	"1524:Nyanza Lac",
	"1525:Rwegura",
	"348:Phnom Penh - Pochentong",
	"347:Siem Reap",
	"1516:Bamenda",
	"1518:Bertoua",
	"1513:Douala",
	"1515:Garoua",
	"1517:Kribi",
	"1514:Ngaoundere",
	"257:Yaounde",
	"623:Banff, Alberta",
	"622:Calgary, Alberta",
	"639:Charlottetown, Prince Edward Island",
	"618:Cranbrook, British Columbia",
	"621:Edmonton, Alberta",
	"636:Fredericton, New Brunswick",
	"640:Goose Bay, Newfoundland",
	"625:Grande Prairie, Alberta",
	"637:Halifax, Nova Scotia",
	"643:Inuvik, Northwest Territories",
	"613:Iqaluit, Nunavut",
	"617:Kamloops, British Columbia",
	"627:Lethbridge, Alberta",
	"626:Medicine Hat, Alberta",
	"634:Montreal, Quebec",
	"265:Ottawa, Ontario",
	"619:Prince George, British Columbia",
	"616:Prince Rupert, British Columbia",
	"635:Quebec, Quebec",
	"624:Red Deer, Alberta",
	"629:Regina, Saskatchewan",
	"641:Saint John NB, New Brunswick",
	"628:Saskatoon, Saskatchewan",
	"642:St Johns, Newfoundland",
	"632:Sudbury, Ontario",
	"638:Sydney, Nova Scotia",
	"631:Thunder Bay, Ontario",
	"264:Toronto, Ontario",
	"266:Vancouver, British Columbia",
	"620:Victoria, British Columbia",
	"614:Whitehorse, Yukon Territories",
	"633:Windsor, Ontario",
	"630:Winnipeg, Manitoba",
	"615:Yellowknife, Northwest Territories",
	"196:Sal",
	"1169:Abeche",
	"1170:Bol",
	"1173:Faya-Largeau",
	"1174:Mongo",
	"1171:Moundou",
	"256:Ndjamena",
	"1172:Sarh",
	"2202:Concepcion",
	"2201:Coyhaique",
	"102:Iquique",
	"2203:La Serena",
	"104:Puerto Montt",
	"105:Punta Arenas",
	"103:Santiago",
	"2204:Valparaiso",
	"1831:Anshan",
	"1832:Baoji",
	"1833:Baotou",
	"237:Beijing",
	"541:Changchun",
	"554:Changsha",
	"547:Chengdu",
	"349:Chongqing",
	"1834:Dali",
	"560:Dalian",
	"1835:Daqing",
	"1836:Datong",
	"1837:Fushun",
	"557:Fuzhou",
	"1838:Gaoxiong",
	"1839:Golmud",
	"241:Guangzhou",
	"561:Guilin",
	"548:Guiyang",
	"559:Haikou",
	"556:Hangzhou",
	"540:Harbin",
	"553:Hefei",
	"1876:Hengyang",
	"562:Hohhot",
	"1840:Huaibei",
	"1841:Huainan",
	"1842:Jilin",
	"551:Jinan",
	"1877:Jingzhou",
	"1843:Jiujiang",
	"238:Kunming",
	"546:Lanzhou",
	"236:Lhasa",
	"1844:Liuzhou",
	"1845:Luoyang",
	"555:Nanchang",
	"350:Nanjing",
	"558:Nanning",
	"1846:Naqu",
	"564:Ningbo",
	"1878:Panzhihua",
	"1847:Pingxiang",
	"542:Qingdao",
	"1848:Qiqihaer",
	"1849:Quanzhou",
	"1850:Sanya",
	"240:Shanghai",
	"1851:Shangqiu",
	"1852:Shantou",
	"1853:Shaoguan",
	"352:Shenyang",
	"1854:Shenzhen",
	"1855:Shihezi",
	"550:Shijiazhuang",
	"1856:Siping",
	"1857:Suzhou",
	"354:Taibei",
	"549:Taiyuan",
	"1858:Taizhong",
	"1859:Tangshan",
	"353:Tianjin",
	"1860:Tianshui",
	"543:Urumqi",
	"1861:Wenzhou",
	"351:Wuhan",
	"1862:Wuxi",
	"239:Xi'an",
	"563:Xiamen",
	"1879:Xiangfan",
	"1863:Xianyang",
	"545:Xining",
	"1864:Xuzhou",
	"1865:Yangquan",
	"1866:Yantai",
	"1867:Yichang",
	"544:Yinchuan",
	"1868:Yushu",
	"1880:Zhangjiajie",
	"1869:Zhangjiakou",
	"1870:Zhanjiang",
	"552:Zhengzhou",
	"1871:Zhuzhou",
	"1872:Zibo",
	"1873:Zigong",
	"1874:Zunyi",
	"866:Apartado",
	"867:Arauca",
	"868:Armenia",
	"869:Barrancabermeja",
	"160:Barranquilla",
	"157:Bogota",
	"870:Bucaramanga",
	"1642:Buenaventura",
	"158:Cali",
	"161:Cartagena",
	"871:Cucuta",
	"872:Florencia",
	"1643:Gaviotas",
	"873:Ibague",
	"1644:Ipiales",
	"1645:Lebrija",
	"874:Leticia",
	"875:Manizales",
	"159:Medellin",
	"1325:Mitu",
	"1327:Mocoa",
	"876:Monteria",
	"877:Neiva",
	"1646:Palmira",
	"878:Pasto",
	"879:Pereira",
	"880:Popayan",
	"881:Providencia",
	"882:Puerto Carreno",
	"1326:Puerto Inirida",
	"883:Quibdo",
	"884:Riohacha",
	"1647:Rionegro",
	"885:San Andres, Island",
	"1648:San Jose Del Guaviare",
	"886:Santa Marta",
	"1324:Sincelejo",
	"888:Tumaco",
	"887:Tunja",
	"889:Valledupar",
	"890:Villavicencio",
	"1323:Yopal",
	"311:Moroni",
	"285:Alajuela",
	"1126:Canas",
	"1115:Cartago",
	"1125:Filadelfia",
	"1120:Guapiles",
	"1114:Heredia",
	"1124:Liberia",
	"1119:Limon",
	"1121:Los Chiles",
	"1127:Nicoya",
	"1128:Puntarenas",
	"1129:Quepos",
	"1130:San Isidro",
	"1113:San Jose",
	"1117:Sixaola",
	"1116:Turrialba",
	"1122:Upala",
	"2876:Abidjan",
	"2877:Adiake",
	"2878:Bondoukou",
	"2879:Bouake",
	"2880:Daloa",
	"2881:Odienne",
	"74:Dubrovnik",
	"71:Osijek",
	"72:Rijeka",
	"73:Split",
	"70:Zagreb",
	"708:Camaguey",
	"707:Cayo Coco",
	"706:Cienfuegos",
	"280:Havana",
	"709:Holguin",
	"704:Pinar Del Rio",
	"710:Santiago De Cuba",
	"705:Varadero",
	"202:Larnaka Airport",
	"1441:Nicosia",
	"1442:Paphos Airport",
	"1884:Paralimni",
	"1885:Polis Chrysochous",
	"1886:Prodromos",
	"693:Brno",
	"2162:Liberec",
	"920:Ostrava",
	"2161:Pilsen",
	"197:Prague",
	"190:Copenhagen",
	"583:Nuuk",
	"582:Torshavn",
	"250:Djibouti",
	"287:Melville Hall Airport",
	"592:Barahona",
	"593:La Romana",
	"594:Montecristi",
	"595:Puerto Plata",
	"596:Punta Cana",
	"597:San Juan",
	"598:Santiago",
	"281:Santo Domingo",
	"230:Pyongyang",
	"2047:Cuenca",
	"2048:Guayaquil",
	"291:Quito",
	"2049:San Cristobal-Galapagos",
	"1268:Alexandria",
	"1272:Asswan",
	"248:Cairo",
	"1270:Hurghada",
	"1271:Luxor",
	"1269:Sharm El-Sheikh",
	"1187:Acajutla",
	"1189:Nueva Concepcion",
	"1188:San Miguel",
	"282:San Salvador",
	"1186:Santa Ana",
	"155:Asmara",
	"154:Assab",
	"1928:Parnu",
	"149:Tallinn",
	"1927:Tartu",
	"913:Manzini",
	"912:Mbabane",
	"162:Addis Ababa",
	"1918:Assosa",
	"163:Awassa",
	"164:Bahir Dar",
	"1919:Bale Robe",
	"165:Dire Dawa",
	"1920:Gode",
	"1921:Gondar",
	"166:Jimma",
	"1922:Lalibela",
	"167:Mekele",
	"94:Nadi",
	"93:Suva",
	"168:Helsinki-Vantaa",
	"171:Kuopio",
	"172:Rovaniemi",
	"170:Tampere",
	"169:Turku",
	"1753:Ajaccio",
	"1050:Bordeaux",
	"1051:Brest",
	"1052:Clermont Ferrand",
	"307:Le Lamentin",
	"306:Le Raizet, Guadeloupe",
	"1053:Lille",
	"1054:Lyon",
	"1055:Marseille",
	"1056:Nantes",
	"902:Nice",
	"194:Paris",
	"305:Rochambeau",
	"1057:Strasbourg",
	"1058:Toulouse",
	"297:Tahiti",
	"255:Libreville",
	"140:Banjul",
	"209:Tbilisi",
	"59:Berlin",
	"1342:Bremen",
	"1343:Dresden",
	"1344:Erfurt",
	"1345:Essen",
	"57:Frankfurt",
	"1346:Freiburg",
	"55:Hamburg",
	"1347:Hannover",
	"1348:Kassel",
	"1349:Kiel",
	"56:Koeln",
	"1350:Leipzig",
	"1351:Magdeburg",
	"58:Munich",
	"1352:Nuernberg",
	"1353:Oberstdorf",
	"1354:Regensburg",
	"1355:Rostock",
	"1356:Saarbruecken",
	"1357:Stuttgart",
	"1358:Trier",
	"921:Accra",
	"2966:Aflao",
	"2967:Akim Oda",
	"2968:Axim",
	"2969:Bole",
	"2970:Bolgatanga",
	"1380:Cape Coast",
	"2971:Damongo",
	"2972:Goaso",
	"1381:Ho",
	"2973:Kasoa",
	"1383:Kete-Krachi",
	"2974:Kintampo",
	"2975:Koforidua",
	"922:Kumasi",
	"2976:Nalerigu",
	"1386:Navrongo",
	"2977:Obuasi",
	"2978:Sefwi Bekwai",
	"1382:Sunyani",
	"1379:Takoradi",
	"1384:Tamale",
	"2979:Tarkwa",
	"2980:Techiman",
	"1387:Wa",
	"1385:Yendi",
	"2273:Aktion (Preveza)",
	"2274:Alexandroupoli",
	"2275:Anchialos (Volos)",
	"177:Athens",
	"2276:Athinai Hellinikon (South Attica)",
	"2277:Chios",
	"2278:Herakleion",
	"2279:Ioannina",
	"2280:Kalamata",
	"2281:Kastoria",
	"2282:Kefalhnia",
	"2283:Kerkyra",
	"2284:Larissa",
	"2285:Mytilini",
	"2286:Rhodes",
	"2287:Samos",
	"2288:Souda (Chania)",
	"2289:Tatoi (North Attica)",
	"178:Thessaloniki",
	"2290:Tripolis",
	"906:Guatemala City",
	"925:Boke",
	"245:Conakry",
	"930:Faranah",
	"929:Kankan",
	"924:Kindia",
	"932:Kissidougou",
	"928:Koundara",
	"927:Labe",
	"933:Macenta",
	"926:Mamou",
	"934:N'Zerekore",
	"931:Siguiri",
	"346:Bissau",
	"1489:Anna Regina",
	"1490:Bartica",
	"1491:Ebini",
	"289:Georgetown",
	"1492:Kamarang",
	"1493:Lethem",
	"1494:Linden",
	"1495:Mabaruma",
	"1496:New Amsterdam",
	"1497:Timehri",
	"1500:Port-au-Prince",
	"283:Tegucigalpa",
	"1:Hong Kong",
	"60:Budapest",
	"63:Debrecen",
	"61:Gyor",
	"62:Miskolc",
	"64:Pecs",
	"65:Szeged",
	"189:Reykjavik",
	"1560:Agartala",
	"1561:Agra",
	"522:Ahmedabad",
	"1562:Aizwal",
	"1563:Ajmer",
	"1564:Akola",
	"1565:Allahabad",
	"1638:Ambala",
	"1566:Ambikapur",
	"1567:Amritsar",
	"1568:Aurangabad",
	"1569:Balasore",
	"523:Bangalore",
	"1570:Bareilly",
	"1571:Baroda",
	"1573:Bhagalpur",
	"524:Bhopal",
	"525:Bhubaneshwar",
	"1574:Bhuj",
	"1575:Bikaner",
	"526:Chandigarh",
	"527:Chennai",
	"1576:Coimbatore",
	"1577:Cooch Behar",
	"1578:Dehradun",
	"1579:Dharamsala",
	"1580:Dibrugarh",
	"1581:Gadag",
	"1582:Gangtok",
	"1583:Gaya",
	"528:Goa",
	"1584:Gopalpur",
	"1585:Gorakhpur",
	"1586:Gulbarga",
	"529:Guwahati",
	"1587:Gwalior",
	"1588:Hissar",
	"530:Hyderabad",
	"1589:Imphal",
	"1590:Indore",
	"1591:Jabalpur",
	"1592:Jagdalpur",
	"531:Jaipur",
	"1593:Jaisalmer",
	"1594:Jammu",
	"1595:Jamshedpur",
	"1596:Jharsuguda",
	"1640:Jodhpur",
	"1639:Kanpur",
	"1597:Kanyakumari",
	"1598:Karnal",
	"1599:Kochi",
	"1600:Kodaikanal",
	"1601:Kohima",
	"225:Kolkata",
	"1602:Kota",
	"1603:Kozhikode",
	"532:Lucknow",
	"1604:Ludhiana",
	"1605:Madurai",
	"1606:Malda",
	"1607:Mangalore",
	"1608:Minicoy",
	"1609:Mukteshwar",
	"226:Mumbai",
	"1610:Mysore",
	"533:Nagpur",
	"1611:Nasik",
	"1612:New Delhi (Palam)",
	"224:New Delhi (SFD)",
	"1613:Parbhani",
	"1614:Passighat",
	"1641:Patiala",
	"534:Patna",
	"1616:Port Blair",
	"1615:Puducherry",
	"535:Pune",
	"1617:Raipur",
	"1618:Rajkot",
	"1619:Ranchi",
	"1631:Salem",
	"1621:Shillong",
	"1622:Shimla",
	"1620:Silchar",
	"1623:Solapur",
	"536:Srinagar",
	"1624:Sriniketan",
	"1625:Surat",
	"537:Thiruvananthapuram",
	"1626:Tiruchirapalli",
	"1627:Udaipur",
	"1628:Varanasi",
	"1632:Vellore",
	"1629:Vijayawada",
	"1630:Vishakhapatnam",
	"655:Ambon",
	"2234:Balikpapan",
	"2235:Banda Aceh",
	"2236:Bandar Lampung",
	"2237:Bandung",
	"2238:Banjarmasin",
	"2239:Batam",
	"2240:Bengkulu",
	"652:Biak",
	"2241:Bitung",
	"649:Denpasar",
	"2242:Gorontalo",
	"310:Jakarta",
	"2243:Jambi",
	"2244:Jayapura",
	"2245:Kendari",
	"2246:Komodo",
	"2247:Kota Bogor",
	"2248:Kota Malang",
	"2249:Kupang",
	"2250:Kuta",
	"654:Lombok",
	"2251:Magelang",
	"2252:Makassar",
	"2253:Mamuju",
	"651:Manado",
	"2254:Mataram",
	"647:Medan",
	"2255:Padang",
	"2256:Palangkaraya",
	"2257:Palembang",
	"2258:Palu",
	"2259:Pangkal Pinang",
	"2260:Pekanbaru",
	"653:Pontianak",
	"2261:Samarinda",
	"2262:Semarang",
	"2263:Serang",
	"2264:Sorong Kota",
	"648:Surabaya",
	"2265:Surakarta",
	"2266:Tangerang",
	"2267:Tanjung Pinang",
	"2268:Tanjung Selor",
	"2269:Tarakan",
	"2270:Ternate",
	"2271:Timika",
	"650:Ujung Pandang",
	"2272:Yogyakarta",
	"939:Ahwaz",
	"1443:Arak",
	"1444:Ardabil",
	"943:Bandarabbas",
	"1445:Birjand",
	"1446:Bojnoord",
	"940:Bushehr",
	"935:Esfahan",
	"1447:Ghazvin",
	"1448:Ghom",
	"1449:Gorgan",
	"1450:Hamedan",
	"1451:Ilam",
	"941:Kerman",
	"1452:Kermanshah",
	"1453:Khoramabad",
	"938:Mashhad",
	"1454:Orumiyeh",
	"1455:Rasht",
	"1456:Sanandaj",
	"1457:Sari",
	"1458:Semnan",
	"1459:Shahrekord",
	"936:Shiraz",
	"937:Tabriz",
	"218:Tehran",
	"1460:Yasouj",
	"1461:Yazd",
	"942:Zahedan",
	"1462:Zanjan",
	"1463:Amarah",
	"1464:Baghdad",
	"1465:Karbala",
	"1466:Kirkuk",
	"1467:Mosul",
	"1468:Nasiriya",
	"330:Belmullet",
	"328:Cork",
	"949:Donegal",
	"188:Dublin",
	"948:Galway",
	"1914:Kerry",
	"332:Kilkenny",
	"331:Malin Head",
	"1915:Mayo",
	"1916:Offaly",
	"329:Shannon Airport",
	"1917:Wexford",
	"1929:Afula",
	"1930:Beer Sheva",
	"46:Eilat",
	"1931:Haifa",
	"43:Jerusalem",
	"1932:Lod",
	"1933:Mizpe Ramon",
	"1934:Nazareth",
	"44:Tel Aviv",
	"45:Tiberias",
	"1935:Zefat",
	"2069:Agrigento",
	"2070:Alghero",
	"1942:Ancona",
	"1943:Aosta",
	"600:Bari",
	"1944:Bologna",
	"1945:Bolzano",
	"601:Cagliari",
	"1946:Campobasso",
	"2071:Catania",
	"1947:Crotone",
	"602:Florence (FIRENZE)",
	"1948:Genova",
	"2072:Isola d'Elba",
	"2073:Lecce",
	"603:Milan (MILANO)",
	"604:Naples (NAPOLI)",
	"605:Palermo",
	"1949:Perugia",
	"1950:Pescara",
	"2074:Piacenza",
	"2075:Pisa",
	"1951:Potenza",
	"2076:Reggio Calabria",
	"201:Rome (ROMA)",
	"1952:Torino",
	"1953:Udine",
	"606:Venice (VENEZIA)",
	"2077:Verona",
	"2078:Vieste",
	"98:Kingston",
	"99:Montego Bay",
	"185:Fukuoka",
	"355:Nagoya",
	"186:Naha",
	"184:Osaka",
	"181:Sapporo",
	"182:Sendai",
	"183:Tokyo",
	"215:Amman",
	"591:Aqaba",
	"590:Irbid",
	"152:Almaty",
	"153:Astana",
	"854:Eldoret",
	"1794:Embu",
	"1795:Garissa",
	"2946:Kakamega",
	"2945:Kericho",
	"2944:Kisii",
	"903:Kisumu",
	"2948:Kitale",
	"1796:Lamu",
	"519:Lodwar",
	"2951:Machakos",
	"1797:Makindu",
	"1798:Malindi",
	"1799:Marsabit",
	"2950:Meru",
	"520:Mombasa",
	"2952:Moyale",
	"251:Nairobi",
	"518:Nakuru",
	"2947:Narok",
	"2949:Nyeri",
	"1800:Voi",
	"2953:Wajir",
	"217:Kuwait Airport",
	"1498:Kuwait City",
	"210:Bishkek",
	"2172:Osh",
	"1501:Luangnamtha",
	"644:Luangphrabang",
	"646:Pakse",
	"645:Savannakhet",
	"235:Vientiane",
	"1502:Xiengkhuang",
	"173:Daugavpils",
	"174:Liepaja",
	"175:Riga",
	"176:Ventspils",
	"214:Beirut",
	"1339:Berea",
	"1337:Butha-Buthe",
	"1338:Leribe",
	"1331:Mafeteng",
	"1330:Maseru",
	"1332:Mohale's Hoek",
	"1335:Mokhotlong",
	"1336:Oxbow",
	"1334:Qacha's Nek",
	"1333:Quthing",
	"1341:Semonkong",
	"1340:Thaba-Tseka",
	"1182:Benghazi",
	"1194:Ghadames",
	"1180:Ghat",
	"1195:Sebha",
	"1181:Sirte",
	"1179:Tripoli",
	"607:Kaunas",
	"608:Klaipeda",
	"1549:Panevezys",
	"1548:Siauliai",
	"204:Vilnius",
	"192:Luxembourg",
	"156:Macao",
	"7:Antananarivo",
	"9:Antsiranana",
	"12:Fianarantsoa",
	"11:Mahajanga",
	"8:Toamasina",
	"10:Toliara",
	"262:Mzuzu",
	"75:Alor Setar",
	"76:Cameron Highlands",
	"77:Ipoh",
	"78:Johor Bahru",
	"79:Kota Bharu",
	"81:Kota Kinabalu",
	"82:Kuala Lumpur",
	"83:Kuantan",
	"80:Kuching",
	"84:Labuan",
	"85:Langkawi",
	"86:Melaka",
	"87:Miri",
	"88:Petaling Jaya",
	"89:Pulau Pinang",
	"91:Sandakan",
	"90:Sibu",
	"589:Gan - Addu Atoll",
	"2882:Hanimaadhoo",
	"228:Male'",
	"129:Bamako",
	"135:Gao",
	"130:Kayes",
	"136:Kidal",
	"133:Mopti",
	"132:Segou",
	"131:Sikasso",
	"134:Tombouctou",
	"42:Luqa, Malta",
	"247:Plaisance",
	"1219:Port Louis",
	"1220:Vacoas",
	"1207:Acapulco",
	"1277:Aguascalientes",
	"1209:Cancun",
	"1279:Chihuahua",
	"279:Ciudad de Mexico",
	"1278:Ciudad Juarez",
	"1280:Cozumel",
	"1281:Cuernavaca",
	"1282:Culiacan",
	"1206:Guadalajara",
	"1283:Hermosillo",
	"1284:Huatulco",
	"1285:Ixtapa Zihuatanejo",
	"1286:Jalapa",
	"1287:Leon",
	"1204:Los Cabos",
	"1288:Manzanillo",
	"1289:Mazatlan",
	"1290:Merida",
	"1291:Mexicali",
	"1208:Monterrey",
	"1292:Morelia",
	"1293:Puebla",
	"1205:Puerto Vallarta",
	"1294:Queretaro",
	"1295:Reynosa",
	"1296:Saltillo",
	"1297:San Luis Potosi",
	"1298:Tampico",
	"1299:Tijuana",
	"1300:Toluca",
	"1301:Torreon",
	"1302:Veracruz",
	"1303:Villahermosa",
	"1423:Balti",
	"1424:Cahul",
	"208:Chisinau",
	"1425:Tiraspol",
	"1143:Arvaikheer",
	"1132:Baganuur district",
	"1153:Baruun-Urt",
	"1139:Bayankhongor",
	"1145:Bulgan",
	"1152:Choibalsan",
	"1150:Choir",
	"1155:Dalanzadgad",
	"1148:Darkhan",
	"1149:Erdenet",
	"1138:Govi-Altai",
	"1156:Khanbogd",
	"1144:Kharkhorin",
	"1141:Khatgal",
	"1137:Khovd",
	"1154:Mandalgovi",
	"1140:Murun",
	"1157:Sainshand",
	"1146:Sukhbaatar",
	"1136:Tosontsengel",
	"1142:Tsetserleg",
	"229:Ulaanbaatar",
	"1134:Ulaangom",
	"1133:Ulgii",
	"1135:Uliastai",
	"1151:Undurkhaan",
	"1158:ZamiinUud",
	"1147:Zuunmod",
	"1378:Podgorica",
	"179:Casablanca",
	"180:Marrakech",
	"124:Beira",
	"125:Chimoio",
	"126:Inhambane",
	"119:Lichinga",
	"128:Maputo",
	"121:Nampula",
	"120:Pemba",
	"122:Quelimane",
	"123:Tete",
	"923:Vilanculos",
	"127:Xai-Xai",
	"2138:Coco-Island",
	"2139:Dawei",
	"2140:Hkamti",
	"2141:Homalin",
	"2142:Hpa-an",
	"2143:Kalewa",
	"2144:Katha",
	"2145:Kengtung",
	"2146:Lashio",
	"588:Mandalay",
	"2147:Meiktila",
	"2148:Mindat",
	"2149:Monywa",
	"2150:Myitkyina",
	"2151:Naypyitaw",
	"2152:Pathein",
	"2153:Putao",
	"2154:Pyay",
	"2155:Sagaing",
	"2156:Sittwe",
	"2158:Taunggyi",
	"2157:Taungoo",
	"2159:Thandwe",
	"232:Yangon",
	"2160:Yay",
	"1830:Windhoek",
	"2959:Bhairahwa",
	"2960:Biratnagar",
	"2101:Birendranagar",
	"2961:Dhangadhi",
	"2102:Dhankuta",
	"2103:Dipayal",
	"2962:Ghorahi",
	"2963:Janakpur",
	"2964:Jumla",
	"114:Kathmandu",
	"2965:Okhaldhunga",
	"2104:Pokhara",
	"143:Amsterdam (Schiphol)",
	"144:De Bilt",
	"141:Den Helder",
	"142:Groningen",
	"147:Maastricht",
	"145:Twenthe",
	"146:Vlissingen",
	"286:Curacao",
	"1829:Oranjestad",
	"1473:Belep",
	"1474:Bourail",
	"1475:Chaine Nord",
	"1476:Chaine Sud",
	"1477:Iles des pins",
	"1478:Kone",
	"1479:Koumac",
	"1480:Lifou",
	"1481:Mare",
	"296:Noumea",
	"1482:Ouegoua",
	"1483:Ouvea",
	"1484:Phare Amedee",
	"1485:Poindimie",
	"1486:Thio",
	"1487:Yate",
	"2105:Alexandra",
	"2106:Ashburton",
	"538:Auckland",
	"2107:Blenheim",
	"539:Christchurch",
	"2108:Dannevirke",
	"2109:Dargaville",
	"1550:Dunedin",
	"2110:Gisborne",
	"2111:Gore",
	"2112:Greymouth",
	"1551:Hamilton",
	"2113:Hastings",
	"1552:Hokitika",
	"2114:Invercargill",
	"2115:Kaikoura",
	"1553:Kaitaia",
	"2116:Levin",
	"2117:Masterton",
	"2118:Milford Sound",
	"2119:Motueka",
	"2120:Mount Cook",
	"1554:Napier",
	"1555:Nelson",
	"1556:New Plymouth",
	"2121:Oamaru",
	"2122:Paihia",
	"1557:Palmerston North",
	"2123:Paraparaumu",
	"1558:Queenstown",
	"2124:Reefton",
	"1559:Rotorua",
	"2125:Taumarunui",
	"2126:Taupo",
	"2127:Tauranga",
	"2128:Te Kuiti",
	"2129:Thames",
	"2130:Timaru",
	"2131:Tokoroa",
	"2132:Wanaka",
	"298:Wellington",
	"2133:Westport",
	"2134:Whakatane",
	"2135:Whanganui",
	"2136:Whangarei",
	"2137:Whitianga",
	"284:Chinandega",
	"327:Niamey",
	"324:Abuja",
	"2050:Kano",
	"258:Lagos",
	"325:Port-Harcourt",
	"2051:Sokoto",
	"2052:Yola",
	"1499:Ohrid",
	"199:Skopje",
	"22:Bergen",
	"908:Kristiansand",
	"21:Oslo",
	"23:Tromsoe",
	"907:Trondheim",
	"1393:Adam",
	"1394:Bahla",
	"1395:Buraimi",
	"1396:Dibba",
	"1397:Duqam Airport",
	"2958:Duqm Port - OODP",
	"1398:Fahud",
	"1399:Haima",
	"1400:Halaniyat",
	"1401:Ibra",
	"1402:Ibri",
	"1403:Jabal_Qamar",
	"1404:Jabal_Samhan",
	"1405:Khassab",
	"1406:Madha",
	"1407:Marmul",
	"1408:Masirah",
	"1409:Mhout",
	"1411:Mudhebi",
	"112:Muscat (Seeb)",
	"1412:Nizwa",
	"1635:Qaboos Port",
	"1413:Qairoon",
	"1636:Qalhat",
	"1637:Qarn Alam",
	"1414:Raysut",
	"1415:Rustaq",
	"1416:Saiq",
	"113:Salalah",
	"1410:Salalah Port",
	"1417:Samail",
	"1418:Sohar",
	"1419:Sur",
	"1420:Suwiq",
	"1421:Thumrait",
	"898:Faisalabad",
	"897:Gilgit",
	"896:Hyderabad",
	"223:Islamabad",
	"892:Karachi",
	"891:Lahore",
	"899:Multan",
	"900:Murree",
	"901:Muzaffarabad",
	"895:Nawabshah",
	"893:Peshawar",
	"894:Quetta",
	"1244:Anton",
	"1245:Bocas del Toro",
	"1241:David",
	"1243:Los Santos",
	"1221:Panama City",
	"1242:Santiago",
	"1426:Daru",
	"1427:Goroka",
	"1428:Kavieng",
	"1429:Lae City",
	"1430:Madang",
	"1246:Port Moresby",
	"1431:Rabaul",
	"1432:Vanimo",
	"1433:Wewak",
	"292:Asuncion",
	"1175:Ciudad Del Este",
	"1177:Encarnacion",
	"1178:Mariscal Jose Felix Estigarribia",
	"1176:Pedro Juan Caballero",
	"109:Arequipa",
	"107:Cajamarca",
	"110:Cuzco",
	"111:Iquitos",
	"1376:Juliaca",
	"108:Lima",
	"106:Piura",
	"1375:Pucallpa",
	"702:Tacna",
	"701:Trujillo",
	"1088:Baguio",
	"1488:Boracay Island, Malay",
	"1095:Cabanatuan",
	"1092:Cagayan de Oro City",
	"1097:Calapan",
	"1101:Catbalogan",
	"1106:Dipolog",
	"1100:Dumaguete",
	"1105:General Santos",
	"1098:Iloilo/Bacolod",
	"1249:Kidapawan",
	"1093:Laoag",
	"1096:Legaspi",
	"1090:Metro Cebu",
	"1091:Metro Davao",
	"92:Metro Manila",
	"1250:Puerto Princesa",
	"1099:Roxas",
	"1104:Surigao",
	"1102:Tacloban",
	"1089:Tagaytay",
	"1103:Tagbilaran",
	"1094:Tuguegarao",
	"2163:Bialystok",
	"25:Gdansk",
	"2164:Klodzko",
	"2165:Koszalin",
	"27:Krakow",
	"2166:Lodz",
	"2167:Lublin",
	"2168:Olsztyn",
	"26:Poznan",
	"2169:Rzeszow",
	"585:Suwalki",
	"584:Szczecin",
	"2170:Torun",
	"24:Warsaw",
	"586:Wroclaw",
	"2171:Zielona Gora",
	"2218:Angra do Heroismo",
	"2219:Aveiro",
	"2220:Beja",
	"2221:Braga",
	"2222:Braganca",
	"2223:Castelo Branco",
	"2224:Coimbra",
	"4:Faro",
	"5:Funchal",
	"2225:Guarda",
	"2227:Leiria",
	"2:Lisboa",
	"6:Ponta Delgada",
	"2228:Portalegre",
	"3:Porto",
	"2226:Santa Cruz das Flores",
	"2229:Santarem",
	"2230:Setubal",
	"2231:Viana do Castelo",
	"2232:Vila Real",
	"2233:Viseu",
	"1882:Al-Ruwais",
	"221:Doha",
	"1881:Dukhan",
	"1883:Ummsaid",
	"336:Busan",
	"334:Daejeon",
	"333:Gangneung",
	"335:Gwangju",
	"337:Jeju",
	"231:Seoul",
	"2089:Arad",
	"2090:Botosani",
	"200:Bucharest",
	"2091:Cluj-Napoca",
	"2092:Constanta",
	"2093:Craiova",
	"2094:Iasi",
	"2095:Rm. Valcea",
	"2096:Sibiu",
	"2097:Sulina",
	"1108:Abakan",
	"1014:Aginskoe",
	"975:Anadyr'",
	"914:Arhangel'sk",
	"1026:Astrahan'",
	"1023:Azov",
	"1009:Barnaul",
	"1021:Belgorod",
	"1047:Birobidzan",
	"1015:Blagovescensk",
	"979:Brjansk",
	"989:Cheboksary",
	"1003:Cheljabinsk",
	"1111:Cherkessk",
	"1012:Chita",
	"969:Dudinka",
	"916:Ekaterinburg",
	"1025:Elista",
	"1112:Gorno-Altaisk",
	"1037:Groznyj",
	"663:Habarovsk",
	"1010:Hakasskaja",
	"973:Hanty-Mansijsk",
	"662:Irkutsk",
	"983:Ivanovo",
	"1002:Izhevsk",
	"917:Jakutsk",
	"982:Jaroslavl'",
	"985:Joskar-Ola",
	"1017:Juzhno-Sahalinsk",
	"977:Kaliningrad",
	"990:Kaluga",
	"986:Kazan'",
	"1008:Kemerovo",
	"981:Kirov",
	"658:Kostroma",
	"1027:Krasnodar",
	"661:Krasnojarsk",
	"999:Kudymkar",
	"1004:Kurgan",
	"1019:Kursk",
	"1031:Kyzyl",
	"996:Lipeck",
	"918:Magadan",
	"1038:Mahackala",
	"1032:Maikop",
	"206:Moscow",
	"967:Murmansk",
	"1034:Nal'cik",
	"970:Nar'jan-Mar",
	"1109:Nazran'",
	"1033:Nevinnomyssk",
	"988:Niznij Novgorod",
	"657:Novgorod",
	"1007:Novosibirsk",
	"660:Omsk",
	"1036:Ordzhonikedzevskaja",
	"995:Orel",
	"1029:Orenburg",
	"1046:Palana",
	"998:Penza",
	"1000:Perm'",
	"665:Petropavlovsk-Kamca",
	"968:Petrozavodsk",
	"976:Pskov",
	"992:Rjazan'",
	"1024:Rostov-Na-Donu",
	"971:Salehard",
	"1005:Samara",
	"993:Saransk",
	"915:Saratov",
	"978:Smolensk",
	"203:St. Petersburg",
	"1028:Stavropol'",
	"1039:Surgut",
	"972:Syktyvkar",
	"997:Tambov",
	"1040:Tiksi",
	"1001:Tjumen'",
	"1006:Tomsk",
	"991:Tula",
	"974:Tura",
	"1030:Turocak",
	"984:Tver'",
	"659:Ufa",
	"1013:Ulan-Ude",
	"994:Ulyanovsk",
	"1011:Ust'ordynskiy",
	"1110:Vladikavkaz",
	"987:Vladimir",
	"664:Vladivostok",
	"1022:Volgograd",
	"980:Vologda",
	"1020:Voronez",
	"1506:Gicumbi",
	"1512:Huye",
	"1509:Karongi",
	"254:Kigali",
	"1507:Musanze",
	"1505:Ngoma",
	"2883:Nyagatare",
	"1511:Nyamagabe",
	"1510:Rubavu",
	"1508:Rusizi",
	"1222:Castries",
	"1248:Vieux-Fort",
	"1230:Apia",
	"861:Abha",
	"862:Al-Baha",
	"1887:Arar",
	"1888:Buraydah",
	"860:Dammam",
	"863:Hail",
	"699:Jeddah",
	"698:Jizan",
	"695:Madinah",
	"700:Makkah",
	"1889:Najran",
	"216:Riyadh",
	"1890:Sakaka",
	"1891:Sharurah",
	"697:Tabouk",
	"864:Taif",
	"1892:Yanbu",
	"2915:Bakel",
	"2916:Cap Skirring",
	"244:Dakar",
	"2933:Dakar-Diass AIBD",
	"2917:Diourbel",
	"2918:Fatick",
	"2919:Kaffrine",
	"2920:Kaolack",
	"2921:Kedougou",
	"2922:Kolda",
	"2923:Linguere",
	"2924:Louga",
	"2925:Matam",
	"2926:Mbour",
	"2927:Podor",
	"2928:Saint-Louis",
	"2929:Sedhiou",
	"2930:Tambacounda",
	"2931:Thies",
	"2932:Ziguinchor",
	"198:Belgrade",
	"1388:Kragujevac",
	"1389:Nis",
	"1390:Novi Sad",
	"1391:Pristina",
	"1392:Zlatibor",
	"253:Victoria",
	"246:Freetown",
	"234:Singapore",
	"41:Bratislava",
	"1224:Hurbanovo",
	"1228:Kosice",
	"1226:Lucenec",
	"1227:Poprad",
	"1225:Sliac",
	"1229:Tisinec",
	"1223:Zilina",
	"54:Ljubljana",
	"1923:Maribor",
	"1924:Novo Mesto",
	"1925:Portoroz",
	"1926:Ratece",
	"295:Auki",
	"2098:Bosaso",
	"2099:Hargeisa",
	"2100:Mogadishu",
	"138:Cape Town",
	"137:Durban",
	"139:Johannesburg",
	"1541:Juba",
	"1540:Malakal",
	"1231:A Coruna",
	"1755:Albacete",
	"2174:Alcala de Henares",
	"1754:Alicante/Alacant",
	"1756:Almeria",
	"2884:Andujar",
	"2175:Aranda de Duero",
	"2885:Aranjuez",
	"2176:Arrecife",
	"1757:Avila",
	"2886:Aviles",
	"2177:Ayamonte",
	"1758:Badajoz",
	"1232:Barcelona",
	"2887:Benavente",
	"2888:Benidorm",
	"1233:Bilbao",
	"1759:Burgos",
	"1760:Caceres",
	"1761:Cadiz",
	"2889:Calatayud",
	"2890:Capdepera",
	"2891:Caravaca de La Cruz",
	"2178:Cartagena",
	"1762:Castellon de la Plana/Castello de la Plana",
	"2892:Cazorla",
	"1763:Ceuta",
	"1764:Ciudad Real",
	"2893:Ciudad Rodrigo",
	"2179:Ciutadella de Menorca",
	"1765:Cordoba",
	"1766:Cuenca",
	"1767:Donostia/San Sebastian",
	"2180:Ecija",
	"2181:Eivissa",
	"2182:Elche/Elx",
	"2894:Estepona",
	"2183:Figueres",
	"2184:Gijon",
	"1768:Girona",
	"1769:Granada",
	"1770:Guadalajara",
	"2895:Haro",
	"1771:Huelva",
	"1772:Huesca",
	"2185:Jaca",
	"1773:Jaen",
	"2896:Javea/Xabia",
	"2186:Jerez de la Frontera",
	"2897:La Seu D-Urgell",
	"1234:Las Palmas de Gran Canaria",
	"1774:Leon",
	"2898:Llanes",
	"1775:Lleida",
	"2899:Lloret de Mar",
	"1776:Logrono",
	"1777:Lugo",
	"195:Madrid",
	"1235:Malaga",
	"2900:Manresa",
	"2901:Mao-Mahon",
	"2187:Marbella",
	"1778:Melilla",
	"2188:Merida",
	"2189:Motril",
	"1779:Murcia",
	"1780:Ourense",
	"1781:Oviedo",
	"1782:Palencia",
	"1236:Palma de Mallorca",
	"1783:Pamplona/Iruna",
	"2190:Plasencia",
	"2191:Ponferrada",
	"1784:Pontevedra",
	"2902:Puerto de la Cruz",
	"2192:Puerto del Rosario",
	"2903:Reinosa",
	"2193:Reus",
	"2904:Roquetas de Mar",
	"1785:Salamanca",
	"2905:Salou",
	"2194:San Sebastian de la Gomera",
	"2195:Santa Cruz de La Palma",
	"304:Santa Cruz De Tenerife",
	"1786:Santander",
	"2196:Santiago de Compostela",
	"1787:Segovia",
	"1237:Sevilla",
	"2906:Siguenza",
	"2197:Sitges",
	"1788:Soria",
	"2198:Talavera de la Reina",
	"2907:Tarancon",
	"2908:Tarifa",
	"1789:Tarragona",
	"1790:Teruel",
	"1791:Toledo",
	"2909:Torremolinos",
	"2910:Trujillo",
	"2911:Tudela",
	"2912:Valdepenas",
	"1238:Valencia",
	"1239:Valladolid",
	"2199:Valverde",
	"2200:Vigo",
	"2913:Vinaros",
	"1792:Vitoria-Gasteiz",
	"2914:Xativa",
	"1793:Zamora",
	"1240:Zaragoza",
	"338:Anuradhapura",
	"339:Batticaloa",
	"227:Colombo",
	"340:Galle",
	"341:Jaffna",
	"342:Kandy",
	"1059:Mannar",
	"343:Nuwara Eliya",
	"344:Ratnapura",
	"345:Trincomalee",
	"1536:Dongola",
	"1538:Elobeid",
	"1537:Kassala",
	"249:Khartoum",
	"1539:Nyala",
	"1535:Port Sudan",
	"2081:Albina",
	"2082:Djoemoe",
	"2083:Kwamalasemoetoe",
	"2084:Lelydorp",
	"2085:Nieuw Nickerie",
	"1048:Paramaribo",
	"2088:Sipaliwini",
	"2087:Stoelmanseiland",
	"1042:Gothenburg",
	"1045:Kiruna",
	"1041:Malmo",
	"1043:Norrkoping",
	"187:Stockholm",
	"1044:Sundsvall",
	"193:Geneva",
	"313:Lugano",
	"312:Zurich",
	"1261:Aleppo",
	"213:Damascus",
	"1266:Dara'a",
	"1262:Deir Ezzor",
	"1267:Homs",
	"1263:Lattakia",
	"1264:Palmyra",
	"1265:Qamishli",
	"211:Dushanbe",
	"911:Khorog",
	"910:Khujand",
	"909:Kurgan-Tube",
	"252:Dar Es Salaam",
	"667:Dodoma",
	"668:Mtwara",
	"669:Mwanza",
	"670:Tabora",
	"671:Tanga",
	"672:Zanzibar",
	"233:Bangkok",
	"567:Chiang Mai",
	"566:Chiang Rai",
	"576:Hua Hin",
	"574:Kanchanaburi",
	"571:Khon Kaen",
	"577:Ko Samui",
	"565:Mae Hong Son",
	"573:Nakhon Ratchasima",
	"575:Pattaya",
	"569:Phetchabun",
	"579:Phuket",
	"578:Songkhla",
	"570:Sukhothai",
	"568:Tak",
	"572:Ubon Ratchathani",
	"260:Lome",
	"100:Port of Spain (Trinidad)",
	"101:Scarborough (Tobago)",
	"243:Tunis-Carthage",
	"50:Adana",
	"48:Ankara",
	"51:Antalya",
	"1363:Diyarbakir",
	"1364:Edirne",
	"53:Erzurum",
	"47:Istanbul",
	"49:Izmir",
	"1365:Konya",
	"1366:Mugla",
	"1367:Nevsehir",
	"52:Samsun",
	"1368:Sanliurfa",
	"1369:Trabzon",
	"1370:Van",
	"1371:Zonguldak",
	"212:Ashgabat",
	"1936:Arua",
	"1329:Entebbe",
	"1937:Gulu",
	"1938:Kabale",
	"1328:Kampala",
	"1503:Kasese",
	"1939:Masindi",
	"1940:Mbarara",
	"1504:Soroti",
	"1941:Tororo",
	"2934:Dnipro",
	"2939:Donetsk",
	"2936:Kharkiv",
	"2940:Kherson",
	"207:Kyiv",
	"2941:Luhansk",
	"2935:Lviv",
	"2937:Odesa",
	"2938:Simferopol",
	"2942:Uzhorod",
	"2943:Vinnitsa",
	"222:Abu Dhabi",
	"1190:Dubai",
	"1191:Ras Al Khaimah",
	"1893:Aberdeen",
	"1894:Aberystwyth",
	"1895:Armagh",
	"1896:Bala",
	"1897:Bangor",
	"38:Belfast",
	"28:Birmingham",
	"1898:Bristol",
	"1899:Cambridge",
	"36:Cardiff",
	"1900:Carlisle",
	"33:Edinburgh",
	"1901:Enniskillen",
	"34:Exeter",
	"1902:Glasgow",
	"1373:Guernsey",
	"1377:Hamilton",
	"1903:Inverness",
	"1374:Isle of Man",
	"1372:Jersey",
	"39:Leeds",
	"1904:Liverpool",
	"32:London",
	"1905:Londonderry (Derry)",
	"31:Manchester",
	"29:Newcastle",
	"40:Norwich",
	"1906:Plymouth",
	"1907:Reading",
	"1908:Rhayader",
	"1909:Southampton",
	"1910:Swansea",
	"1911:Truro",
	"1912:Ullapool",
	"1913:Wick",
	"703:Abilene, Texas",
	"1954:Agana, Guam",
	"711:Akron, Ohio",
	"712:Albany, New York",
	"713:Albuquerque, New Mexico",
	"714:Allentown, Pennsylvania",
	"715:Amarillo, Texas",
	"716:Anchorage, Alaska",
	"1955:Ann Arbor, Michigan",
	"1956:Annapolis, Maryland",
	"717:Asheville, North Carolina",
	"1957:Athens, Georgia",
	"268:Atlanta, Georgia",
	"718:Atlantic City, New Jersey",
	"1958:Augusta, Georgia",
	"1959:Augusta, Maine",
	"1960:Aurora, Illinois",
	"719:Austin, Texas",
	"720:Baltimore, Maryland",
	"1961:Bangor, Maine",
	"721:Baton Rouge, Louisiana",
	"722:Billings, Montana",
	"723:Birmingham, Alabama",
	"724:Bismarck, North Dakota",
	"725:Boise, Idaho",
	"273:Boston, Massachusetts",
	"1962:Bowling Green, Kentucky",
	"1963:Bozeman, Montana",
	"726:Bridgeport, Connecticut",
	"1964:Brookings, South Dakota",
	"727:Brownsville, Texas",
	"728:Buffalo, New York",
	"729:Burlington, Vermont",
	"1965:Butte, Montana",
	"730:Caribou, Maine",
	"1966:Carmel, Indiana",
	"1967:Carson City, Nevada",
	"731:Casper, Wyoming",
	"1968:Cedar Rapids, Iowa",
	"1969:Chandler, Arizona",
	"732:Charleston, South Carolina",
	"733:Charleston, West Virginia",
	"734:Charlotte, North Carolina",
	"735:Chattanooga, Tennessee",
	"736:Cheyenne, Wyoming",
	"274:Chicago, Illinois",
	"737:Cincinnati, Ohio",
	"1970:Clarksville, Tennessee",
	"1971:Cleveland, Mississippi",
	"738:Cleveland, Ohio",
	"1972:Colchester, Vermont",
	"739:Colorado Springs, Colorado",
	"1973:Columbia, Missouri",
	"740:Columbia, South Carolina",
	"741:Columbus, Georgia",
	"742:Columbus, Ohio",
	"743:Concord, New Hampshire",
	"744:Corpus Christi, Texas",
	"745:Dallas Ft Worth, Texas",
	"1974:Davenport, Iowa",
	"746:Dayton, Ohio",
	"747:Daytona Beach, Florida",
	"271:Denver, Colorado",
	"748:Des Moines, Iowa",
	"275:Detroit, Michigan",
	"1975:Dover, Delaware",
	"749:Duluth, Minnesota",
	"750:El Paso, Texas",
	"751:Elkins, West Virginia",
	"752:Erie, Pennsylvania",
	"753:Eugene, Oregon",
	"754:Evansville, Indiana",
	"755:Fairbanks, Alaska",
	"756:Fargo, North Dakota",
	"1976:Fayetteville, Arkansas",
	"757:Flagstaff, Arizona",
	"758:Flint, Michigan",
	"1977:Fort Collins, Colorado",
	"759:Fort Smith, Arkansas",
	"760:Fort Wayne, Indiana",
	"1978:Frankfort, Kentucky",
	"761:Fresno, California",
	"1979:Gillette, Wyoming",
	"762:Goodland, Kansas",
	"1980:Grand Forks, North Dakota",
	"1981:Grand Island, Nebraska",
	"763:Grand Junction, Colorado",
	"764:Grand Rapids, Michigan",
	"765:Great Falls, Montana",
	"766:Green Bay, Wisconsin",
	"767:Greensboro, North Carolina",
	"1982:Greenville, South Carolina",
	"1983:Gulfport, Mississippi",
	"768:Harrisburg, Pennsylvania",
	"1984:Hattiesburg, Mississippi",
	"769:Helena, Montana",
	"1985:Hilo, Hawaii",
	"849:Honolulu, Hawaii",
	"770:Houston, Texas",
	"1986:Huntington, West Virginia",
	"771:Huntsville, Alabama",
	"1987:Idaho Falls, Idaho",
	"772:Indianapolis, Indiana",
	"773:Jackson, Mississippi",
	"774:Jacksonville, Florida",
	"1988:Jefferson City, Missouri",
	"1989:Joliet, Illinois",
	"1990:Jonesboro, Arkansas",
	"775:Juneau, Alaska",
	"1991:Kailua, Hawaii",
	"1992:Kansas City, Kansas",
	"776:Kansas City, Missouri",
	"1993:Kapolei, Hawaii",
	"1994:Kearney, Nebraska",
	"1995:Keene, New Hampshire",
	"1996:Kenosha, Wisconsin",
	"1997:Ketchikan, Alaska",
	"777:Key West, Florida",
	"778:Knoxville, Tennessee",
	"1998:Lafayette, Louisiana",
	"1999:Lahaina, Hawaii",
	"779:Lake Charles, Louisiana",
	"780:Lansing, Michigan",
	"2000:Las Cruces, New Mexico",
	"781:Las Vegas, Nevada",
	"2001:Lawton, Oklahoma",
	"782:Lexington, Kentucky",
	"783:Lincoln, Nebraska",
	"784:Little Rock, Arkansas",
	"269:Los Angeles, California",
	"785:Louisville, Kentucky",
	"2002:Lowell, Massachusetts",
	"786:Lubbock, Texas",
	"787:Macon, Georgia",
	"788:Madison, Wisconsin",
	"2003:Manchester, New Hampshire",
	"2004:McComb, Mississippi",
	"789:Medford, Oregon",
	"790:Memphis, Tennessee",
	"267:Miami, Florida",
	"2005:Middletown, Connecticut",
	"791:Milwaukee, Wisconsin",
	"276:Minneapolis, Minnesota",
	"2006:Minot, North Dakota",
	"2007:Missoula, Montana",
	"792:Mobile, Alabama",
	"793:Montgomery, Alabama",
	"2008:Montpelier, Vermont",
	"2009:Myrtle Beach, South Carolina",
	"2010:Nampa, Idaho",
	"2011:Napa, California",
	"2012:Naples, Florida",
	"2013:Nashua, New Hampshire",
	"794:Nashville, Tennessee",
	"2014:New Haven, Connecticut",
	"795:New Orleans, Louisiana",
	"278:New York City, New York",
	"2015:Newark, Delaware",
	"796:Newark, New Jersey",
	"2016:Newport News, Virginia",
	"797:Norfolk, Virginia",
	"2017:Norman, Oklahoma",
	"798:North Platte, Nebraska",
	"799:Oklahoma City, Oklahoma",
	"2018:Olathe, Kansas",
	"2019:Olympia, Washington",
	"800:Omaha, Nebraska",
	"801:Orlando, Florida",
	"2020:Owensboro, Kentucky",
	"802:Paducah, Kentucky",
	"2021:Palm Springs, California",
	"2022:Parkersburg, West Virginia",
	"803:Pendleton, Oregon",
	"804:Peoria, Illinois",
	"805:Philadelphia, Pennsylvania",
	"806:Phoenix, Arizona",
	"2023:Pierre, South Dakota",
	"807:Pittsburgh, Pennsylvania",
	"808:Pocatello, Idaho",
	"809:Portland, Maine",
	"810:Portland, Oregon",
	"811:Providence, Rhode Island",
	"2024:Provo, Utah",
	"812:Pueblo, Colorado",
	"2025:Racine, Wisconsin",
	"813:Raleigh & Durham, North Carolina",
	"814:Rapid City, South Dakota",
	"2026:Reading, Pennsylvania",
	"815:Reno, Nevada",
	"816:Richmond, Virginia",
	"2027:Rio Rancho, New Mexico",
	"817:Roanoke, Virginia",
	"2028:Rochester, Minnesota",
	"2029:Rochester, New Hampshire",
	"818:Rochester, New York",
	"2030:Rock Hill, South Carolina",
	"2031:Rock Springs, Wyoming",
	"819:Rockford, Illinois",
	"2032:Roswell, New Mexico",
	"2033:Rutland, Vermont",
	"820:Sacramento, California",
	"2034:Saint Paul, Minnesota",
	"822:Salem, Oregon",
	"823:Salt Lake City, Utah",
	"824:San Angelo, Texas",
	"825:San Antonio, Texas",
	"826:San Diego, California",
	"272:San Francisco, California",
	"852:San Jose, California",
	"850:San Juan, Puerto Rico",
	"2035:Santa Fe, New Mexico",
	"827:Sault Ste. Marie, Michigan",
	"828:Savannah, Georgia",
	"277:Seattle, Washington",
	"2036:Sedona, Arizona",
	"829:Shreveport, Louisiana",
	"830:Sioux City, Iowa",
	"831:Sioux Falls, South Dakota",
	"2037:Sitka, Alaska",
	"832:South Bend, Indiana",
	"833:Spokane, Washington",
	"834:Springfield, Illinois",
	"835:Springfield, Missouri",
	"821:St. Louis, Missouri",
	"2038:St. Petersburg, Florida",
	"2039:Stamford, Connecticut",
	"836:Syracuse, New York",
	"2040:Tacoma, Washington",
	"837:Tallahassee, Florida",
	"853:Tampa, Florida",
	"838:Toledo, Ohio",
	"839:Topeka, Kansas",
	"2041:Trenton, New Jersey",
	"840:Tucson, Arizona",
	"841:Tulsa, Oklahoma",
	"2042:Tuscaloosa, Alabama",
	"842:Waco, Texas",
	"270:Washington DC",
	"2043:Waterloo, Iowa",
	"2044:Watertown, South Dakota",
	"843:West Palm Beach, Florida",
	"844:Wichita Falls, Texas",
	"851:Wichita, Kansas",
	"845:Wilkes Barre, Pennsylvania",
	"2045:Winston-Salem, North Carolina",
	"2046:Worcester, Massachusetts",
	"846:Yakima, Washington",
	"847:Youngstown, Ohio",
	"848:Yuma, Arizona",
	"293:Montevideo",
	"326:Punta Del Este",
	"118:Nukus",
	"116:Samarkand",
	"115:Tashkent",
	"117:Termez",
	"1469:Lakatoro",
	"1470:Lenakel",
	"674:Luganville",
	"673:Port Vila",
	"1471:Saratamata",
	"1472:Sola",
	"2053:Barcelona",
	"2054:Barquisimeto",
	"2055:Calabozo",
	"288:Caracas",
	"1202:Cd. Bolivar",
	"1196:Coro",
	"2056:Guanare",
	"2057:Guiria",
	"2058:La Canada",
	"2059:La Orchila",
	"1199:Maiquetia",
	"1197:Maracaibo",
	"1198:Maracay",
	"1200:Margarita",
	"2060:Maturin",
	"2061:Mene Grande",
	"1201:Merida",
	"2062:Puerto Ayacucho",
	"2063:San Antonio Del Tachira",
	"1203:San Fernando",
	"2064:Santa Elena De Uairen",
	"2065:Temblador",
	"2066:Tumeremo",
	"2067:Valle De La Pascua",
	"656:Da Nang",
	"308:Hanoi",
	"309:Ho Chi Minh City",
	"1305:Chipata",
	"2981:Choma",
	"2983:Isoka",
	"1304:Kabwe",
	"1306:Kasama",
	"1307:Livingstone",
	"150:Lusaka",
	"1308:Mansa",
	"2982:Mfuwe",
	"1309:Mongu",
	"1310:Ndola",
	"1311:Solwezi",
	"963:Beitbridge",
	"950:Bulawayo",
	"964:Chipinge",
	"955:Gokwe",
	"953:Gweru",
	"263:Harare",
	"965:Hwange",
	"952:Kadoma",
	"966:Kariba",
	"957:Karoi",
	"951:Kwekwe",
	"958:Marondera",
	"961:Masvingo",
	"956:Mount Darwin",
	"954:Mutare",
	"960:Plumtree",
	"959:Rusape",
	"962:Victoria Falls"
];

/**
 * @constant CITIES
 * @name CITIES
 * @description Well known cities for weather forecasts
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @private
 * @ignore
 */
const CITIES = map(KNOWN_CITIES, (knownCity) => {
  // obtain and normalize city data
  const [cityId, city] = knownCity.split(':');

  // compact and return city data
  return mergeObjects({ city, cityId: toNumber(cityId) });
});

/**
 * @constant DEFAULT_REQUEST_HEADERS
 * @name DEFAULT_REQUEST_HEADERS
 * @description Default http request headers
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @private
 * @ignore
 */
const DEFAULT_REQUEST_HEADERS = {
  accept: 'application/json',
  'content-type': 'application/json',
  'user-agent':
    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36',
};

/**
 * @function findCity
 * @name findCity
 * @description Find cities details
 * @param {object} optns Valid lookup options
 * @param {object} optns.name Valid city name
 * @returns {object|undefined} found city or undefined
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @public
 * @example
 *
 * findCity({ name : 'Dar Es Salaam' });
 * // => { Country: 'United Republic of Tanzania', CityId: '252', ... }
 */
const findCity = (optns) => {
  // ensure options
  const { name } = mergeObjects(optns);

  // ignore
  if (isNotValue(name)) {
    return undefined;
  }

  // lookup given city from well known cities
  const cityName = trim(name);
  const foundCity = find(CITIES, ({ city, cityId }) => {
    return (
      String(city) === String(cityName) || String(cityId) === String(cityName)
    );
  });

  // return found city
  return foundCity;
};

/**
 * @function parseTime
 * @name parseTime
 * @description Parse and normalize time string to date
 * @param {Date} date Valid base date
 * @param {string} time Valid time string
 * @param {string} [separator=':'] Time string separator
 * @returns {Date | undefined} normalized date time in UTC
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.3.0
 * @version 0.2.0
 * @static
 * @public
 * @example
 *
 * const date = '2020-09-08T00:00:00.000Z';
 * const time = '06:20';
 * parseTime(date, time);
 * // => '2020-09-07T06:20:00.000Z'
 */
const parseTime = (date, time, separator = ':') => {
  // ensure date & time
  if (isNotValue(date) || isNotValue(time)) {
    return undefined;
  }

  // create base date moment
  let baseMoment = moment.utc(date);
  if (isNotValue(baseMoment.valueOf())) {
    return undefined;
  }

  // obtain hour and minutes from time string
  const [hours, minutes] = time.split(separator);
  if (isNotValue(hours) || isNotValue(minutes)) {
    return undefined;
  }

  // set hours and minutes to base moment
  baseMoment = baseMoment.hours(hours).minutes(minutes);

  // derive date time
  const derivedDate = isNotValue(baseMoment.valueOf())
    ? undefined
    : baseMoment.toDate();

  // return derived date time
  return derivedDate;
};

/**
 * @function normalizePresentForecast
 * @name normalizePresentForecast
 * @description Normalize present city forecast
 * @param {object} forecast Valid present forecast
 * @param {object} city Valid city details
 * @returns {object} normalized present city forecast
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @public
 * @example
 *
 * const forecast = { present: { '193': { cityId: 252, ... } } };
 * const city = { cityId: 252, ... };
 * normalizePresentForecast(forecast, city);
 * // => { city: 'Dar Es Salaam', weather: 'Light Rain', ... }
 */
const normalizePresentForecast = (forecast, city) => {
  // collect found present forecast
  const { present } = mergeObjects(forecast);
  const presentForecasts = compact([].concat(values(present)));

  // ensure present city
  const presentCity = mergeObjects(city);

  // find city present forecast
  let presentForecast = find(presentForecasts, (cityForecast) => {
    return String(cityForecast.cityId) === String(presentCity.cityId);
  });

  // normalize & convert
  const date = parseDate(get(presentForecast, 'issue'), 'YYYYMMDD');
  presentForecast = mergeObjects(presentCity, {
    date,
    issuedAt: parseDate(get(presentForecast, 'issue'), 'YYYYMMDDHH'),
    weather: get(presentForecast, 'wxdesc'),
    temperature: toNumber(get(presentForecast, 'temp')), //= > °C
    relativeHumidity: toNumber(get(presentForecast, 'rh')),
    windDirection: get(presentForecast, 'wd'),
    windSpeed: (toNumber(get(presentForecast, 'ws')) * 18) / 5, //= > km/h
    sunRiseAt: parseTime(date, get(presentForecast, 'sunrise')),
    sunSetAt: parseTime(date, get(presentForecast, 'sunset')),
    moonRiseAt: parseTime(date, get(presentForecast, 'moonrise')),
    moonSetAt: parseTime(date, get(presentForecast, 'moonset')),
    present: true,
  });

  // return given city present forecast
  return presentForecast;
};

/**
 * @function normalizeWeekForecasts
 * @name normalizeWeekForecasts
 * @description Normalize present city forecast
 * @param {object} forecasts Valid week forecasts
 * @param {object} city Valid city details
 * @returns {object[]} normalized week city forecast
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @public
 * @example
 *
 * const forecast = { city: { forecast: { forecastDay: [ ... ] } } };
 * const city = { cityId: 252, ... };
 * normalizeWeekForecasts(forecast, city);
 * // => [{ city: 'Dar Es Salaam', weather: 'Light Rain', ... }, ... ]
 */
const normalizeWeekForecasts = (forecasts, city) => {
  // collect found week forecasts
  const {
    city: {
      forecast: { issueDate, forecastDay },
    },
  } = mergeObjects({ forecast: { forecastDay: [] } }, forecasts);
  const weekForecasts = compact([].concat(forecastDay));

  // ensure present city
  const presentCity = mergeObjects(city);

  // normalize & convert
  const cityWeekForecasts = map(weekForecasts, (forecast) => {
    const date = parseDate(get(forecast, 'forecastDate'), 'YYYY-MM-DD');
    return mergeObjects(presentCity, {
      date,
      issuedAt: parseDate(issueDate, 'YYYY-MM-DD HH:mm:ss'),
      weather: get(forecast, 'weather'),
      temperature: toNumber(get(forecast, 'temp')), //= > °C
      minimumTemperature: toNumber(get(forecast, 'minTemp')), //= > °C
      maximumTemperature: toNumber(get(forecast, 'maxTemp')), //= > °C
      relativeHumidity: toNumber(get(forecast, 'rh')),
      windDirection: get(forecast, 'wd'),
      windSpeed: (toNumber(get(forecast, 'ws')) * 18) / 5, //= > km/h
      sunRiseAt: parseTime(date, get(forecast, 'sunrise')),
      sunSetAt: parseTime(date, get(forecast, 'sunset')),
      moonRiseAt: parseTime(date, get(forecast, 'moonrise')),
      moonSetAt: parseTime(date, get(forecast, 'moonset')),
      present: false,
    });
  });

  // return given city week forecast
  return cityWeekForecasts;
};

/**
 * @function fetchPresentForecast
 * @name fetchPresentForecast
 * @description Fetch present forecast of a given city;
 * @param {object} optns Valid options
 * @param {string} optns.city Valid city name
 * @returns {Promise.<object | Error>} promise resolve with present forecast
 * on success or error on failure.
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @public
 * @example
 *
 * const optns = { city : 'Dar Es Salaam' };
 * fetchPresentForecast(optns)
 *   .then(forecast => { ... }) //=> { weather: 'Light Rain', ... }
 *   .catch(error => { ... });
 */
const fetchPresentForecast = (optns) => {
  // normalize options
  const { city, ...options } = mergeObjects(optns, {
    headers: DEFAULT_REQUEST_HEADERS,
  });

  // find city
  const presentCity = findCity({ name: city });
  if (isNotValue(presentCity)) {
    return Promise.reject(Error('Unknown City'));
  }

  // derive city present forecast url
  const url = 'https://worldweather.wmo.int/en/json/present.json';

  // request city present forecasts
  return get$1(url, options).then((forecast) => {
    // normalize given city present forecast
    const presentCityForecast = normalizePresentForecast(forecast, presentCity);

    // return given city present forecast
    return presentCityForecast;
  });
};

/**
 * @function fetchWeekForecasts
 * @name fetchWeekForecasts
 * @description Fetch week forecasts of a given city
 * @param {object} optns Valid options
 * @param {string} optns.city Valid city name
 * @returns {Promise.<object[] | Error>} promise resolve with week forecasts on success
 * or error on failure.
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @public
 * @example
 *
 * const optns = { city : 'Dar Es Salaam' };
 * fetchWeekForecasts(optns)
 *   .then(forecasts => { ... }) //=> [{ weather: 'Light Rain', ... }, ... ]
 *   .catch(error => { ... });
 */
const fetchWeekForecasts = (optns) => {
  // normalize options
  const { city, ...options } = mergeObjects(optns, {
    headers: DEFAULT_REQUEST_HEADERS,
  });

  // find city
  const presentCity = findCity({ name: city });
  if (isNotValue(presentCity)) {
    return Promise.reject(Error('Unknown City'));
  }

  // derive city week forecast url
  const { cityId } = presentCity;
  const url = `https://worldweather.wmo.int/en/json/${cityId}_en.json`;

  // request city week forecasts
  return get$1(url, options).then((forecasts) => {
    // normalize given city week forecasts
    const weekForecasts = normalizeWeekForecasts(forecasts, presentCity);

    // return given city week forecast
    return weekForecasts;
  });
};

/**
 * @function fetchForecasts
 * @name fetchForecasts
 * @description Fetch present and week forecasts of a given city
 * @param {object} optns Valid options
 * @param {string} optns.city Valid city name
 * @returns {Promise.<object[] | Error>} promise resolve with forecasts on success
 * or error on failure.
 * @author lally elias <lallyelias87@mail.com>
 * @license MIT
 * @since 0.1.0
 * @version 0.1.0
 * @static
 * @public
 * @example
 *
 * const optns = { city : 'Dar Es Salaam' };
 * fetchForecasts(optns)
 *   .then(forecasts => { ... }) //=> [{ weather: 'Light Rain', ... }, ... ]
 *   .catch(error => { ... });
 */
const fetchForecasts = (optns) => {
  // prepare tasks
  const fetchPresent = fetchPresentForecast(optns);
  const fetchWeek = fetchWeekForecasts(optns);

  // request present & week forecasts
  return all(fetchPresent, fetchWeek).then(
    ([presentForecast, weekForecasts]) => {
      return compact([presentForecast, ...weekForecasts]);
    }
  );
};

export { fetchForecasts, fetchPresentForecast, fetchWeekForecasts };
